{"remainingRequest":"F:\\文档\\丹阳不良债权项目\\丹阳债权清收系统\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\文档\\丹阳不良债权项目\\丹阳债权清收系统\\src\\views\\common\\myfilter.vue?vue&type=style&index=0&id=acaef6c4&scoped=true&lang=css&","dependencies":[{"path":"F:\\文档\\丹阳不良债权项目\\丹阳债权清收系统\\src\\views\\common\\myfilter.vue","mtime":1613987762742},{"path":"F:\\文档\\丹阳不良债权项目\\丹阳债权清收系统\\node_modules\\css-loader\\dist\\cjs.js","mtime":1614934889000},{"path":"F:\\文档\\丹阳不良债权项目\\丹阳债权清收系统\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\文档\\丹阳不良债权项目\\丹阳债权清收系统\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\文档\\丹阳不良债权项目\\丹阳债权清收系统\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614934889000},{"path":"F:\\文档\\丹阳不良债权项目\\丹阳债权清收系统\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KLm15ZmlsdGVyLWNvbnRhaW5lcnsNCiAgd2lkdGg6IDIwMHB4Ow0KICAvKmhlaWdodDogMjAwcHg7Ki8NCiAgLypiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsqLw0KfQ0K"},{"version":3,"sources":["myfilter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA;AACA","file":"myfilter.vue","sourceRoot":"src/views/common","sourcesContent":["<template>\r\n  <div class=\"myfilter-container\">\r\n    <div style=\"width:200px\">\r\n      <el-input placeholder=\"支持条件模糊搜索\" v-model=\"search_input\" @keyup.native.enter=\"filterSearch\" ref=\"input\">\r\n        <el-button slot=\"append\" icon=\"el-icon-search\" @click.native=\"filterSearch\"></el-button>\r\n      </el-input>\r\n    </div>\r\n    <div>\r\n      <div>\r\n        <el-checkbox-group v-model=\"checkList\">\r\n          <div v-for=\"result in search_results\">\r\n            <el-checkbox :label=\"result\" :key=\"result\">{{result}}</el-checkbox>\r\n          </div>\r\n        </el-checkbox-group>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <el-button type=\"text\" @click.native=\"handleFilter\" :disabled=\"isAbled\">筛选</el-button>\r\n      <el-button type=\"text\" @click.native=\"selectAll\">全选</el-button>\r\n      <el-button type=\"text\" @click.native=\"handleReset\">重置</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {default as api} from '../../utils/api'\r\nexport default {\r\n  name: \"myfilter\",\r\n  data(){\r\n    return{\r\n      checkList:[],\r\n      search_results:[],\r\n      search_input:'',\r\n      tableData:[{}],  //回传给父组件（creditMenu）的主表数据tableData\r\n      isAbled:true\r\n    }\r\n  },\r\n  props:['label','property'],\r\n  methods:{\r\n    filterSearch(){\r\n      let _this = this;\r\n      api({\r\n        url: \"/filterSearch\",\r\n        method: \"post\",\r\n        data: {\r\n          \"name\":_this.property,\r\n          \"value\":_this.$refs.input.value\r\n        }\r\n      }).then(data => {\r\n        //返回的数据是列表形式的债权信息\r\n        let _this = this;\r\n        console.log(data);\r\n        _this.tableData = data.data;\r\n        //先清空筛选框中的搜索结果，将从返回的数据中获取相应表头（this.property）的对应值，比如获取表头为'zqr'的值，将其赋值给search_results\r\n        //显示到筛选框中\r\n        _this.search_results=[];\r\n        let i;\r\n        let list = data.data;\r\n        for(i=0;i<list.length;i++){\r\n          _this.search_results.push(list[i][_this.property]);\r\n        }\r\n        _this.checkList=[];\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n    },\r\n    //筛选按钮的点击事件，将被选中的复选框对应的债权信息回传给父组件\r\n    handleFilter(){\r\n      console.log(this.checkList);\r\n      //获取选中checklist对应的债权信息\r\n      let i;\r\n      let filterItem={property:this.property,item:this.checkList};\r\n      // for(i=0;i<this.tableData.length;i++)\r\n      // {\r\n      //   if(this.checkList.indexOf(this.tableData[i][this.property])>=0){\r\n      //     check_tableData.push(this.tableData[i]);\r\n      //   }\r\n      // }\r\n      this.$emit('click_filter',filterItem);\r\n    },\r\n    //重置\r\n    handleReset(){\r\n      this.checkList=[];\r\n      this.isAbled=true;\r\n      let filterItem={property:this.property,item:this.checkList};\r\n      this.$emit('click_filter',filterItem);\r\n    },\r\n    //全选，全不选\r\n    selectAll(){\r\n      if(this.checkList.length===this.search_results.length){\r\n        this.checkList=[];\r\n        this.isAbled=true;\r\n      }\r\n      else{\r\n        this.checkList=this.search_results;\r\n        this.isAbled=false;\r\n      }\r\n\r\n    }\r\n  },\r\n  watch:{\r\n    checkList:function (){\r\n      if(this.checkList.length===0){\r\n        this.isAbled=true;\r\n      }\r\n      else{\r\n        this.isAbled=false;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.myfilter-container{\r\n  width: 200px;\r\n  /*height: 200px;*/\r\n  /*background-color: black;*/\r\n}\r\n</style>"]}]}